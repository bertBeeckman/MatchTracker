# Start with routing the security pages!
_security_login:
    pattern:  /login
    defaults: { _controller: MatchTrackerBundle:Authentication:login }

# We don't need a controller, because the security component listens to the core.security event and
# intercepts the request and handles it.
_security_check:
    pattern:  /login_check

_security_logout:
    pattern:  /logout

profile_panel:
    pattern:  /profile/
    defaults: { _controller: MatchTrackerBundle:Profile:index }


# Non-secure pages
match_tracker_homepage:
    pattern:  /
    defaults: { _controller: MatchTrackerBundle:Home:index }
    requirements:
        _method:  GET

match_tracker_competition_show:
    pattern: /competities/detail/{name}
    defaults: { _controller: MatchTrackerBundle:Competition:detail }
    requirements:
        _method:  GET

match_tracker_competition:
    pattern: /competities/{sport}
    defaults: { _controller: MatchTrackerBundle:Competition:index, sport: alles }
    requirements:
        _method:  GET

match_tracker_authentication_login:
    pattern: /login
    defaults: { _controller: MatchTrackerBundle:Authentication:login }
    requirements:
        _method:  GET

match_tracker_authentication_register:
    pattern: /register
    defaults: { _controller: MatchTrackerBundle:Authentication:register }
    requirements:
        _method:  GET

match_tracker_authentication_register_check:
    pattern: /register
    defaults: { _controller: MatchTrackerBundle:Authentication:register }
    requirements:
        _method:  POST
